// THEME
// -------------------------------------------------

// Variables
@import "basic/variables.theme.less";
@import "basic/mixins.less";

// Minxins
.form-control-focus(@color: @input-border-focus)
{
  @color-rgba: rgba(red(@color), green(@color), blue(@color), .6);
  &:focus
  {
    border-color: @color;
    .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @{color-rgba}");
  }
}

.button-variant(@color; @background; @border) {
  color: @color;
  background-color: @background;
  border-color: @border;

  &:hover,
  &:focus,
  &:active,
  &.active,
  .open .dropdown-toggle& {
    color: @color;
    background-color: darken(@background, 8%);
        border-color: darken(@border, 12%);
    .box-shadow(0 2px 1px rgba(0, 0, 0, 0.1));
  }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: @background;
          border-color: @border;
    }
  }
}

.label-variant(@color)
{
  background-color: @color;
  &[href]
  {
    &:hover,
    &:focus
    {
      background-color: darken(@color, 10%);
    }
  }
}

// Scaffolding
a
{
  color: @link-color;

  &:hover,
  &:focus
  {
    color: @link-hover-color;
  }
}

// Buttons
.btn
{
  border-radius: @border-radius-base;
  .button-variant(@btn-default-color; @btn-default-bg; @btn-default-border);
}
.btn-primary
{
  .button-variant(@btn-primary-color; @btn-primary-bg; @btn-primary-border);
}
// Warning appears as orange
.btn-warning
{
  .button-variant(@btn-warning-color; @btn-warning-bg; @btn-warning-border);
}
// Danger and error appear as red
.btn-danger
{
  .button-variant(@btn-danger-color; @btn-danger-bg; @btn-danger-border);
}
// Success appears as green
.btn-success
{
  .button-variant(@btn-success-color; @btn-success-bg; @btn-success-border);
}
// Info appears as blue-green
.btn-info
{
  .button-variant(@btn-info-color; @btn-info-bg; @btn-info-border);
}

.btn-link
{
  color: @link-color;
  background-color: transparent;
  &,
  &:active,
  &[disabled],
  fieldset[disabled] &,
  &:hover,
  &:focus
  {
    border-color: transparent;
    .box-shadow(none);
  }
  
  &:hover,
  &:focus
  {
    color: @link-hover-color;
  }
  &[disabled],
  fieldset[disabled] &
  {
    &:hover,
    &:focus
    {
      color: @btn-link-disabled-color;
    }
  }
}

// Popover & tooltip
.popover,
.tooltip-inner {
  border-radius: @border-radius-base;
}

// Labels
.label {border-radius: 0;}
.label-primary { .label-variant(@label-primary-bg); }
.label-success { .label-variant(@label-success-bg); }
.label-info    { .label-variant(@label-info-bg); }
.label-warning { .label-variant(@label-warning-bg); }
.label-danger  { .label-variant(@label-danger-bg); }

// Labels.fix
.btn-primary .label-badge,.btn-primary .label-dot
{
  background-color: lighten(@btn-primary-bg, 20%)
}

// Type
.text-primary
{
  color: @color-primary;
  &:hover {
    color: darken(@color-primary, 10%);
  }
}
.text-warning
{
  color: @state-warning-text;
  &:hover {
    color: darken(@state-warning-text, 10%);
  }
}
.text-danger
{
  color: @state-danger-text;
  &:hover {
    color: darken(@state-danger-text, 10%);
  }
}
.text-success
{
  color: @state-success-text;
  &:hover {
    color: darken(@state-success-text, 10%);
  }
}
.text-info
{
  color: @state-info-text;
  &:hover {
    color: darken(@state-info-text, 10%);
  }
}
.text-important
{
  color: @state-important-text;
  &:hover {
    color: darken(@state-important-text, 10%);
  }
}
.text-special
{
  color: @state-special-text;
  &:hover {
    color: darken(@state-special-text, 10%);
  }
}
.text-muted
{
  a
  {
    &:hover,
    &:active
    {
      color: @link-color;
    }
  }
}

.text-link
{
  &:hover,
  &:active
  {
    color: @link-color;
  }
}

// Type.bg
.bg-primary
{
  background-color: @state-primary-inverse-bg;
  a&:hover {
    background-color: darken(@state-primary-inverse-bg, 10%);
  }
}

// Type.hightlight
.hl-primary {
  background-color: @state-primary-bg;
  a&:hover {
    background-color: darken(@state-primary-bg, 10%);
  }
}

// Form
.form-control
{
  border-radius: @input-border-radius;
  .form-control-focus();
}

// Condensed form
.form-condensed {
  .form-control,
  .btn {
    border-radius: @border-radius-base;
  }
}

// Input group
.input-group-addon {
  background-color: @input-group-addon-bg;
}
.input-group-addon,
.input-group-btn .dropdown-toggle,
.input-group-btn .btn {
  border-radius: @border-radius-base !important;
}


// List group
.list-group-item
{
  a&
  {
    &:hover,
    &:focus { text-decoration: none; background-color: @list-group-hover-bg; color: @list-group-hover-color}
  }

  &.active,
  &.active:hover,
  &.active:focus
  {
    background-color: @component-active-bg;
    border-color: @component-active-bg;
  }
}

// Navbar
.navbar-toggle {
  border-radius: @border-radius-base;
}

.navbar {
  @media (min-width: @grid-float-breakpoint) {
    border-radius: @navbar-border-radius;
  }
}

.navbar-inverse
{
  background-color: @navbar-inverse-bg;
  border-color: @navbar-inverse-border;

  .navbar-nav
  {
    > li.nav-heading
    {
      background-color: darken(@navbar-inverse-bg, 5%);
    }

    > li > a
    {
      &:hover,
      &:focus
      {
        background-color: @navbar-inverse-link-hover-bg;
      }
    }
    > .active > a
    {
      &,
      &:hover,
      &:focus
      {
        background-color: @navbar-inverse-link-active-bg;
      }
    }
  }

  .navbar-toggle
  {
    border-color: @navbar-inverse-toggle-border-color;
    &:hover,
    &:focus
    {
      background-color: @navbar-inverse-toggle-hover-bg;
    }
  }

  .navbar-collapse,
  .navbar-form
  {
    border-color: darken(@navbar-inverse-bg, 7%);
  }

  .navbar-nav
  {
    > .open > a
    {
      &,
      &:hover,
      &:focus
      {
        background-color: @navbar-inverse-link-active-bg;
      }
    }

    @media (max-width: @screen-xs-max)
    {
      .open .dropdown-menu
      {
        > .dropdown-header
        {
          border-color: @navbar-inverse-border;
        }

        > li > a
        {
          &:hover,
          &:focus
          {
            background-color: @navbar-inverse-link-hover-bg;
          }
        }

        > .active > a
        {
          &,
          &:hover,
          &:focus
          {
            background-color: @navbar-inverse-link-active-bg;
          }
        }
      }
    }
  }
}

// Navbar.fixed-left
.navbar-fixed-left
{
  &.navbar-inverse
  {
    .navbar-header,
    .navbar-nav
    {
      border-bottom: 1px solid lighten(@navbar-inverse-bg, 10%);
      .box-shadow(inset 0 -1px 0 @navbar-inverse-border);
    }

    &.navbar-collapsed .navbar-nav > li.nav-heading:hover
    {
      color: lighten(@navbar-inverse-link-color, 5%);
      background-color: darken(@navbar-inverse-bg, 8%);
    }
  }
}

// Nav
.nav
{
  > li > a
  {
    &:hover,
    &:focus
    {
      color: @link-hover-color;
    }
  }

  .open > a
  {
    &,
    &:hover,
    &:focus
    {
      border-color: @link-color;

      .caret
      {
        border-top-color: @link-hover-color;
        border-bottom-color: @link-hover-color;
      }
    }
  }
}

.nav-pills
{
  > li
  {
    &.active > a
    {
      &,
      &:hover,
      &:focus
      {
        background-color: @nav-pills-active-link-hover-bg;
      }
    }
  }
}

.nav-primary
{
  > li
  {
    &.active > a
    {
      &,
      &:hover,
      &:focus
      {
        background-color: @component-active-bg;
        border-color: @component-active-bg;
      }
    }
  }
}

.nav-secondary
{
  > li
  {
    &.active > a
    {
      &,
      &:hover,
      &:focus
      {
        color: @nav-secondary-active-link-hover-color;
        border-bottom-color: @nav-secondary-active-border-color;

        .caret
        {
          border-top-color: @nav-secondary-active-link-hover-color;
          border-bottom-color: @nav-secondary-active-link-hover-color;
        }
      }
    }
  }
}

.nav-stacked
{
  &.nav-secondary
  {
    > li
    {
      &.active > a
      {
        &,
        &:hover,
        &:focus
        {
          .box-shadow(inset -2px 0 0 @nav-secondary-active-border-color);
        }
      }
    }
  }
}

.nav-tabs
{
  > li > a
  {
    border-radius: @border-radius-base @border-radius-base 0 0;
  }
}

.nav .caret
{
  border-top-color: @link-color;
  border-bottom-color: @link-color;
}
.nav a:hover .caret
{
  border-top-color: @link-hover-color;
  border-bottom-color: @link-hover-color;
}

// Pager
.pager
{
  > .active > a,
  > .active > span
  {
    &,
    &:hover,
    &:focus
    {
      background-color: @pager-active-bg;
    }
  }
}

// Panel.type
.panel {
  border-radius: @border-radius-base;
  box-shadow: none;

  > .panel-heading {
    background-image: none;
    border-top-left-radius: @border-radius-base;
    border-top-right-radius: @border-radius-base;
  }

  .panel-variant(@panel-default-border; @panel-default-text; @panel-default-heading-bg; @panel-default-border);
}
.dashboard .panel {box-shadow: none}
.panel-primary { .panel-variant(@panel-primary-border; @panel-primary-text; @panel-primary-heading-bg; @panel-primary-border); }
.panel-success > .panel-body, .panel-warning > .panel-body, .panel-primary > .panel-body, .panel-info > .panel-body, .panel-danger > .panel-body {box-shadow: none}


// Table
.table-hover > tbody > tr:hover
{
  > td,
  > th
  {
    background-color: @table-bg-hover;
  }
}

.table tr
{
  > td.active,
  > th.active,
  &.active > td,
  &.active > th
  {
    background-color: @table-bg-active;
  }
}

table.tablesorter thead tr .headerSortUp:after,
table.tablesorter thead tr .headerSortDown:after{color:@link-color!important;}

// Chossen
.chosen-container-single
{
  .chosen-search
  {
    &:focus,
    input[type="text"]:focus
    {
      border-color: @input-border-focus!important;
    }
  }

  .chosen-single {
    border-radius: @input-border-radius!important;
  }
}

.chosen-container .chosen-results
{
  li
  {
    &.highlighted
    {
      background-color: @dropdown-link-hover-bg!important;
    }
  }
}

.chosen-container-active
{
  .chosen-single
  {
    @color-rgba:  rgba(red(@input-border-focus), green(@input-border-focus), blue(@input-border-focus), .6)!important;
    border-color: @input-border-focus!important;
  }

  &.chosen-with-drop .chosen-single
  {
    border-color:  @dropdown-fallback-border!important; // IE8 fallback
    border-color:  @dropdown-border!important;
  }

  .chosen-choices
  {
    @color-rgba:  rgba(red(@input-border-focus), green(@input-border-focus), blue(@input-border-focus), .6)!important;
    border-color: @input-border-focus!important;
  }
}

.chosen-container-multi .chosen-choices {
  border-radius: @input-border-radius!important;
}

// Menu
.menu .nav,
.menu > .nav > li:first-child > a, .menu > .nav > li:first-child.nav-heading,
.menu > .nav > li:last-child > a {
  border-radius: @border-radius-base;
}

// Dropdown
.dropdown-menu
{
  border-radius: @border-radius-base;
}
.dropdown-menu > li > a
{
  &:hover,
  &:focus
  {
    background-color: @dropdown-link-hover-bg;
  }
}

.dropdown-menu > .active > a
{
  &,
  &:hover,
  &:focus
  {
    background-color: @dropdown-link-active-bg;
  }
}

.dropdown-submenu:hover > a,
.dropdown-submenu:focus > a
{
  background-color: @dropdown-link-hover-bg;
}
.dropdown-submenu:hover > a:after { border-left-color: @dropdown-link-hover-color; }


// Datetimepicker
.datetimepicker td.day.today
{
    background-color: @color-warning!important;
    border-color: @color-warning!important;
}
.datetimepicker td.day.active
{
    background-color: @color-primary!important;
    border-color: darken(@color-primary, 10%)!important;
}
.datetimepicker td.day.active:hover
{
    background-color: darken(@color-primary, 10%)!important;
}
.datetimepicker td.day.today:hover,
.datetimepicker td.day.today.active:hover{
    background-color: darken(@color-warning, 10%)!important;
}

// Kindeditor
.ke-container
{
  &.focus
  {
    @color:       @input-border-focus;
    @color-rgba:  rgba(red(@color), green(@color), blue(@color), .6);
    border-color: @color!important;
    .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @{color-rgba}!important");
  }
}

.ke-menu-item-on
{
  background-color: @dropdown-link-active-bg!important;
}

.ke-colorpicker-cell-on
{
  background-color: @dropdown-link-active-bg!important;
}

.ke-input-text
{
  @color: @input-border-focus;
  @color-rgba: rgba(red(@color), green(@color), blue(@color), .6);
  &:focus
  {
    border-color: @color!important;
    .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @{color-rgba}!important");
  }
}

// Messager
.messager {border-radius: @messager-radius;}
.messager-primary {background-color: @state-primary-inverse-bg;}
.messager-success {background-color: @state-success-inverse-bg;}
.messager-info {background-color: @state-info-inverse-bg;}
.messager-warning {background-color: @state-warning-inverse-bg;}
.messager-danger {background-color: @state-danger-inverse-bg;}
.messager-important {background-color: @state-important-inverse-bg;}
.messager-special {background-color: @state-special-inverse-bg;}

// Comment
.comment
{
  &:hover
  {
    > .content
    {
      > .actions
      {
        > a
        {
          color: @link-color;
        }
      }
    }
  }
}

// Alerts
.alert {
  border-radius: @alert-border-radius;
}
.alert-primary
{
  .alert-variant(@alert-primary-bg; @alert-primary-border; @alert-primary-text);
}
.alert-success
{
  .alert-variant(@alert-success-bg; @alert-success-border; @alert-success-text);
}
.alert-info
{
  .alert-variant(@alert-info-bg; @alert-info-border; @alert-info-text);
}
.alert-warning
{
  .alert-variant(@alert-warning-bg; @alert-warning-border; @alert-warning-text);
}
.alert-danger
{
  .alert-variant(@alert-danger-bg; @alert-danger-border; @alert-danger-text);
}

// Kindeditor
.ke-container {
  border-radius: @border-radius-base!important;
}

// Modal
.modal-dialog {
  border-radius: @border-radius-large;
}

// Card
.card
{
  .box-shadow(none);
  border-radius: @border-radius-base;
}

// Code
pre {border-radius: @border-radius-base}
